//***************************************************
//* This file was generated by JSharp
//***************************************************
namespace java.io
{
    public partial class File : global::java.lang.Object, Serializable, global::java.lang.Comparable<File>
    {
        public static global::java.lang.String pathSeparator;
        public static char pathSeparatorChar;
        public static global::java.lang.String separator;
        public static char separatorChar;
        public virtual bool canExecute(){return default(bool);}
        public virtual bool canRead(){return default(bool);}
        public virtual bool canWrite(){return default(bool);}
        public virtual int compareTo(File prm1){return default(int);}
        public virtual bool createNewFile(){return default(bool);}
        public static File createTempFile(global::java.lang.String prm1, global::java.lang.String prm2){return default(File);}
        public static File createTempFile(global::java.lang.String prm1, global::java.lang.String prm2, File prm3){return default(File);}
        public virtual bool delete(){return default(bool);}
        public virtual void deleteOnExit(){}
        public override bool equals(global::System.Object prm1){return default(bool);}
        public virtual bool exists(){return default(bool);}
        public override int hashCode(){return default(int);}
        public File(File prm1, global::java.lang.String prm2){}
        public File(global::java.lang.String prm1, global::java.lang.String prm2){}
        public File(global::java.lang.String prm1){}
        public File(global::java.net.URI prm1){}
        public virtual long lastModified(){return default(long);}
        public virtual long length(){return default(long);}
        public virtual global::java.lang.String[] list(){return default(global::java.lang.String[]);}
        public virtual global::java.lang.String[] list(FilenameFilter prm1){return default(global::java.lang.String[]);}
        public virtual File[] listFiles(FileFilter prm1){return default(File[]);}
        public virtual File[] listFiles(FilenameFilter prm1){return default(File[]);}
        public virtual File[] listFiles(){return default(File[]);}
        public static File[] listRoots(){return default(File[]);}
        public virtual bool mkdir(){return default(bool);}
        public virtual bool mkdirs(){return default(bool);}
        public virtual bool renameTo(File prm1){return default(bool);}
        public virtual bool setExecutable(bool prm1, bool prm2){return default(bool);}
        public virtual bool setExecutable(bool prm1){return default(bool);}
        public virtual bool setLastModified(long prm1){return default(bool);}
        public virtual bool setReadable(bool prm1, bool prm2){return default(bool);}
        public virtual bool setReadable(bool prm1){return default(bool);}
        public virtual bool setReadOnly(){return default(bool);}
        public virtual bool setWritable(bool prm1, bool prm2){return default(bool);}
        public virtual bool setWritable(bool prm1){return default(bool);}
        public virtual global::java.nio.file.Path toPath(){return default(global::java.nio.file.Path);}
        public override global::java.lang.String toString(){return default(global::java.lang.String);}
        public virtual global::java.net.URI toURI(){return default(global::java.net.URI);}
        public virtual global::java.net.URL toURL(){return default(global::java.net.URL);}
        public File  AbsoluteFile { get; private set;}
        public global::java.lang.String  AbsolutePath { get; private set;}
        public File  CanonicalFile { get; private set;}
        public global::java.lang.String  CanonicalPath { get; private set;}
        public long  FreeSpace { get; private set;}
        public bool  IsAbsolute { get; private set;}
        public bool  IsDirectory { get; private set;}
        public bool  IsFile { get; private set;}
        public bool  IsHidden { get; private set;}
        public global::java.lang.String  Name { get; private set;}
        public global::java.lang.String  Parent { get; private set;}
        public File  ParentFile { get; private set;}
        public global::java.lang.String  Path { get; private set;}
        public long  TotalSpace { get; private set;}
        public long  UsableSpace { get; private set;}
    }
}
