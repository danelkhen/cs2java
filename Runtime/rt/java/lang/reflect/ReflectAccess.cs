//***************************************************
//* This file was generated by JSharp
//***************************************************
namespace java.lang.reflect
{
    internal partial class ReflectAccess : Object, global::sun.reflect.LangReflectAccess
    {
        public ReflectAccess(){}
        public virtual Constructor<T> copyConstructor<T>(Constructor<T> prm1){return default(Constructor<T>);}
        public virtual Field copyField(Field prm1){return default(Field);}
        public virtual Method copyMethod(Method prm1){return default(Method);}
        public virtual global::sun.reflect.ConstructorAccessor getConstructorAccessor(Constructor<global::System.Object> prm1){return default(global::sun.reflect.ConstructorAccessor);}
        public virtual byte[] getConstructorAnnotations(Constructor<global::System.Object> prm1){return default(byte[]);}
        public virtual byte[] getConstructorParameterAnnotations(Constructor<global::System.Object> prm1){return default(byte[]);}
        public virtual String getConstructorSignature(Constructor<global::System.Object> prm1){return default(String);}
        public virtual int getConstructorSlot(Constructor<global::System.Object> prm1){return default(int);}
        public virtual global::sun.reflect.MethodAccessor getMethodAccessor(Method prm1){return default(global::sun.reflect.MethodAccessor);}
        public virtual Constructor<T> newConstructor<T>(Class<T> prm1, Class<global::System.Object>[] prm2, Class<global::System.Object>[] prm3, int prm4, int prm5, String prm6, byte[] prm7, byte[] prm8){return default(Constructor<T>);}
        public virtual Field newField(Class<global::System.Object> prm1, String prm2, Class<global::System.Object> prm3, int prm4, int prm5, String prm6, byte[] prm7){return default(Field);}
        public virtual Method newMethod(Class<global::System.Object> prm1, String prm2, Class<global::System.Object>[] prm3, Class<global::System.Object> prm4, Class<global::System.Object>[] prm5, int prm6, int prm7, String prm8, byte[] prm9, byte[] prm10, byte[] prm11){return default(Method);}
        public virtual void setConstructorAccessor(Constructor<global::System.Object> prm1, global::sun.reflect.ConstructorAccessor prm2){}
        public virtual void setMethodAccessor(Method prm1, global::sun.reflect.MethodAccessor prm2){}
    }
}
