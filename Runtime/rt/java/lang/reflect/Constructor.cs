//***************************************************
//* This file was generated by JSharp
//***************************************************
namespace java.lang.reflect
{
    public partial class Constructor<T> : AccessibleObject, GenericDeclaration, Member
    {
        public Constructor(){}
        public override bool equals(global::System.Object prm1){return default(bool);}
        public override T getAnnotation<T>(Class<T> prm1){return default(T);}
        public override int hashCode(){return default(int);}
        public virtual T newInstance(global::System.Object[] prm1){return default(T);}
        public virtual String toGenericString(){return default(String);}
        public override String toString(){return default(String);}
        public global::java.lang.annotation.Annotation[]  DeclaredAnnotations { get; private set;}
        public Class<T>  DeclaringClass { get; private set;}
        Class<global::System.Object> Member.DeclaringClass { get{ return default(Class<global::System.Object>); }}
        public Class<global::System.Object>[]  ExceptionTypes { get; private set;}
        public global::java.lang.reflect.Type[]  GenericExceptionTypes { get; private set;}
        public global::java.lang.reflect.Type[]  GenericParameterTypes { get; private set;}
        public bool  IsSynthetic { get; private set;}
        public bool  IsVarArgs { get; private set;}
        public int  Modifiers { get; private set;}
        public String  Name { get; private set;}
        public global::java.lang.annotation.Annotation[][]  ParameterAnnotations { get; private set;}
        public Class<global::System.Object>[]  ParameterTypes { get; private set;}
        public TypeVariable<Constructor<T>>[]  TypeParameters { get; private set;}
        TypeVariable<global::System.Object>[] GenericDeclaration.TypeParameters { get{ return default(TypeVariable<global::System.Object>[]); }}
    }
}
