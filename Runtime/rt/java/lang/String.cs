//***************************************************
//* This file was generated by JSharp
//***************************************************
namespace java.lang
{
    public partial class String : Object, global::java.io.Serializable, Comparable<String>, CharSequence
    {
        public static global::java.util.Comparator<String> CASE_INSENSITIVE_ORDER;
        public virtual char charAt(int prm1){return default(char);}
        public virtual int codePointAt(int prm1){return default(int);}
        public virtual int codePointBefore(int prm1){return default(int);}
        public virtual int codePointCount(int prm1, int prm2){return default(int);}
        public virtual int compareTo(String prm1){return default(int);}
        public virtual int compareToIgnoreCase(String prm1){return default(int);}
        public virtual String concat(String prm1){return default(String);}
        public virtual bool contains(CharSequence prm1){return default(bool);}
        public virtual bool contentEquals(StringBuffer prm1){return default(bool);}
        public virtual bool contentEquals(CharSequence prm1){return default(bool);}
        public static String copyValueOf(char[] prm1, int prm2, int prm3){return default(String);}
        public static String copyValueOf(char[] prm1){return default(String);}
        public virtual bool endsWith(String prm1){return default(bool);}
        public override bool equals(global::System.Object prm1){return default(bool);}
        public virtual bool equalsIgnoreCase(String prm1){return default(bool);}
        public static String format(global::java.util.Locale prm1, String prm2, global::System.Object[] prm3){return default(String);}
        public static String format(String prm1, global::System.Object[] prm2){return default(String);}
        public virtual byte[] getBytes(global::java.nio.charset.Charset prm1){return default(byte[]);}
        public virtual byte[] getBytes(String prm1){return default(byte[]);}
        public virtual void getBytes(int prm1, int prm2, byte[] prm3, int prm4){}
        public virtual void getChars(int prm1, int prm2, char[] prm3, int prm4){}
        public override int hashCode(){return default(int);}
        public virtual int indexOf(int prm1){return default(int);}
        public virtual int indexOf(String prm1, int prm2){return default(int);}
        public virtual int indexOf(String prm1){return default(int);}
        public virtual int indexOf(int prm1, int prm2){return default(int);}
        public virtual String intern(){return default(String);}
        public String(byte[] prm1){}
        public String(byte[] prm1, int prm2, int prm3){}
        public String(byte[] prm1, global::java.nio.charset.Charset prm2){}
        public String(byte[] prm1, String prm2){}
        public String(byte[] prm1, int prm2, int prm3, global::java.nio.charset.Charset prm4){}
        public String(StringBuilder prm1){}
        public String(StringBuffer prm1){}
        public String(int[] prm1, int prm2, int prm3){}
        public String(char[] prm1, int prm2, int prm3){}
        public String(char[] prm1){}
        public String(String prm1){}
        public String(){}
        public String(byte[] prm1, int prm2, int prm3, String prm4){}
        public String(byte[] prm1, int prm2){}
        public String(byte[] prm1, int prm2, int prm3, int prm4){}
        public virtual int lastIndexOf(String prm1){return default(int);}
        public virtual int lastIndexOf(int prm1, int prm2){return default(int);}
        public virtual int lastIndexOf(int prm1){return default(int);}
        public virtual int lastIndexOf(String prm1, int prm2){return default(int);}
        public virtual int length(){return default(int);}
        public virtual bool matches(String prm1){return default(bool);}
        public virtual int offsetByCodePoints(int prm1, int prm2){return default(int);}
        public virtual bool regionMatches(bool prm1, int prm2, String prm3, int prm4, int prm5){return default(bool);}
        public virtual bool regionMatches(int prm1, String prm2, int prm3, int prm4){return default(bool);}
        public virtual String replace(char prm1, char prm2){return default(String);}
        public virtual String replace(CharSequence prm1, CharSequence prm2){return default(String);}
        public virtual String replaceAll(String prm1, String prm2){return default(String);}
        public virtual String replaceFirst(String prm1, String prm2){return default(String);}
        public virtual String[] split(String prm1){return default(String[]);}
        public virtual String[] split(String prm1, int prm2){return default(String[]);}
        public virtual bool startsWith(String prm1){return default(bool);}
        public virtual bool startsWith(String prm1, int prm2){return default(bool);}
        public virtual CharSequence subSequence(int prm1, int prm2){return default(CharSequence);}
        public virtual String substring(int prm1, int prm2){return default(String);}
        public virtual String substring(int prm1){return default(String);}
        public virtual char[] toCharArray(){return default(char[]);}
        public virtual String toLowerCase(){return default(String);}
        public virtual String toLowerCase(global::java.util.Locale prm1){return default(String);}
        public override String toString(){return default(String);}
        public virtual String toUpperCase(){return default(String);}
        public virtual String toUpperCase(global::java.util.Locale prm1){return default(String);}
        public virtual String trim(){return default(String);}
        public static String valueOf(char[] prm1, int prm2, int prm3){return default(String);}
        public static String valueOf(char[] prm1){return default(String);}
        public static String valueOf(global::System.Object prm1){return default(String);}
        public static String valueOf(double prm1){return default(String);}
        public static String valueOf(char prm1){return default(String);}
        public static String valueOf(int prm1){return default(String);}
        public static String valueOf(long prm1){return default(String);}
        public static String valueOf(bool prm1){return default(String);}
        public static String valueOf(float prm1){return default(String);}
        public byte[]  Bytes { get; private set;}
        public bool  IsEmpty { get; private set;}
    }
}
