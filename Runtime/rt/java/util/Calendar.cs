//***************************************************
//* This file was generated by JSharp
//***************************************************
namespace java.util
{
    public abstract partial class Calendar : global::java.lang.Object, global::java.io.Serializable, global::java.lang.Cloneable, global::java.lang.Comparable<Calendar>
    {
        public bool[] ___isSet;
        public static int ALL_STYLES;
        public static int AM;
        public static int AM_PM;
        public static int APRIL;
        public bool areFieldsSet;
        public static int AUGUST;
        public static int DATE;
        public static int DAY_OF_MONTH;
        public static int DAY_OF_WEEK;
        public static int DAY_OF_WEEK_IN_MONTH;
        public static int DAY_OF_YEAR;
        public static int DECEMBER;
        public static int DST_OFFSET;
        public static int ERA;
        public static int FEBRUARY;
        public static int FIELD_COUNT;
        public int[] fields;
        public static int FRIDAY;
        public static int HOUR;
        public static int HOUR_OF_DAY;
        public bool isTimeSet;
        public static int JANUARY;
        public static int JULY;
        public static int JUNE;
        public static int LONG;
        public static int MARCH;
        public static int MAY;
        public static int MILLISECOND;
        public static int MINUTE;
        public static int MONDAY;
        public static int MONTH;
        public static int NOVEMBER;
        public static int OCTOBER;
        public static int PM;
        public static int SATURDAY;
        public static int SECOND;
        public static int SEPTEMBER;
        public static int SHORT;
        public static int SUNDAY;
        public static int THURSDAY;
        public long time;
        public static int TUESDAY;
        public static int UNDECIMBER;
        public static int WEDNESDAY;
        public static int WEEK_OF_MONTH;
        public static int WEEK_OF_YEAR;
        public static int YEAR;
        public static int ZONE_OFFSET;
        public virtual void add(int prm1, int prm2){}
        public virtual bool after(global::System.Object prm1){return default(bool);}
        public virtual bool before(global::System.Object prm1){return default(bool);}
        public void clear(){}
        public void clear(int prm1){}
        public virtual new global::System.Object clone(){return default(global::System.Object);}
        public virtual int compareTo(Calendar prm1){return default(int);}
        protected virtual void complete(){}
        protected virtual void computeFields(){}
        protected virtual void computeTime(){}
        public override bool equals(global::System.Object prm1){return default(bool);}
        public virtual int get(int prm1){return default(int);}
        public virtual int getActualMaximum(int prm1){return default(int);}
        public virtual int getActualMinimum(int prm1){return default(int);}
        public virtual global::java.lang.String getDisplayName(int prm1, int prm2, Locale prm3){return default(global::java.lang.String);}
        public virtual Map<global::java.lang.String,global::java.lang.Integer> getDisplayNames(int prm1, int prm2, Locale prm3){return default(Map<global::java.lang.String,global::java.lang.Integer>);}
        public virtual int getGreatestMinimum(int prm1){return default(int);}
        public static Calendar getInstance(TimeZone prm1){return default(Calendar);}
        public static Calendar getInstance(TimeZone prm1, Locale prm2){return default(Calendar);}
        public static Calendar getInstance(Locale prm1){return default(Calendar);}
        public virtual int getLeastMaximum(int prm1){return default(int);}
        public virtual int getMaximum(int prm1){return default(int);}
        public virtual int getMinimum(int prm1){return default(int);}
        public override int hashCode(){return default(int);}
        protected int internalGet(int prm1){return default(int);}
        public bool isSet(int prm1){return default(bool);}
        public Calendar(){}
        public Calendar(TimeZone prm1, Locale prm2){}
        public virtual void roll(int prm1, int prm2){}
        public virtual void roll(int prm1, bool prm2){}
        public void set(int prm1, int prm2, int prm3, int prm4, int prm5, int prm6){}
        public virtual void set(int prm1, int prm2){}
        public void set(int prm1, int prm2, int prm3){}
        public void set(int prm1, int prm2, int prm3, int prm4, int prm5){}
        public virtual void setFirstDayOfWeek(int prm1){}
        public virtual void setLenient(bool prm1){}
        public virtual void setMinimalDaysInFirstWeek(int prm1){}
        public void setTime(Date prm1){}
        public virtual void setTimeInMillis(long prm1){}
        public virtual void setTimeZone(TimeZone prm1){}
        public virtual void setWeekDate(int prm1, int prm2, int prm3){}
        public override global::java.lang.String toString(){return default(global::java.lang.String);}
        public Locale[]  AvailableLocales { get; private set;}
        public int  FirstDayOfWeek { get; set;}
        public Calendar  Instance { get; private set;}
        public bool  IsLenient { get; set;}
        public bool  IsWeekDateSupported { get; private set;}
        public int  MinimalDaysInFirstWeek { get; set;}
        public Date  Time { get; set;}
        public long  TimeInMillis { get; set;}
        public TimeZone  TimeZone { get; set;}
        public int  WeeksInWeekYear { get; private set;}
        public int  WeekYear { get; private set;}
    }
}
