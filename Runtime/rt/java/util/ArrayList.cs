//***************************************************
//* This file was generated by JSharp
//***************************************************
namespace java.util
{
    public partial class ArrayList<E> : AbstractList<E>, List<E>, RandomAccess, global::java.lang.Cloneable, global::java.io.Serializable
    {
        public override void add(int prm1, E prm2){}
        public override bool add(E prm1){return default(bool);}
        public override bool addAll(int prm1, Collection<E> prm2){return default(bool);}
        public override bool addAll(Collection<E> prm1){return default(bool);}
        public override void clear(){}
        public virtual new global::System.Object clone(){return default(global::System.Object);}
        public override bool contains(global::System.Object prm1){return default(bool);}
        public virtual void ensureCapacity(int prm1){}
        public override E get(int prm1){return default(E);}
        public override int indexOf(global::System.Object prm1){return default(int);}
        public override Iterator<E> iterator(){return default(Iterator<E>);}
        public ArrayList(Collection<E> prm1){}
        public ArrayList(){}
        public ArrayList(int prm1){}
        public override int lastIndexOf(global::System.Object prm1){return default(int);}
        public override ListIterator<E> listIterator(int prm1){return default(ListIterator<E>);}
        public override ListIterator<E> listIterator(){return default(ListIterator<E>);}
        public override E remove(int prm1){return default(E);}
        public override bool remove(global::System.Object prm1){return default(bool);}
        public override bool removeAll(Collection<global::System.Object> prm1){return default(bool);}
        protected override void removeRange(int prm1, int prm2){}
        public override bool retainAll(Collection<global::System.Object> prm1){return default(bool);}
        public override E set(int prm1, E prm2){return default(E);}
        public override int size(){return default(int);}
        public override List<E> subList(int prm1, int prm2){return default(List<E>);}
        public override global::System.Object[] toArray(){return default(global::System.Object[]);}
        public override T[] toArray<T>(T[] prm1){return default(T[]);}
        public virtual void trimToSize(){}
        public bool  IsEmpty { get; private set;}
    }
}
