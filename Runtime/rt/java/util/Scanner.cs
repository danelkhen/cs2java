//***************************************************
//* This file was generated by JSharp
//***************************************************
namespace java.util
{
    public partial class Scanner : global::java.lang.Object, Iterator<global::java.lang.String>, global::java.io.Closeable
    {
        public virtual void close(){}
        public virtual global::java.util.regex.Pattern delimiter(){return default(global::java.util.regex.Pattern);}
        public virtual global::java.lang.String findInLine(global::java.lang.String prm1){return default(global::java.lang.String);}
        public virtual global::java.lang.String findInLine(global::java.util.regex.Pattern prm1){return default(global::java.lang.String);}
        public virtual global::java.lang.String findWithinHorizon(global::java.lang.String prm1, int prm2){return default(global::java.lang.String);}
        public virtual global::java.lang.String findWithinHorizon(global::java.util.regex.Pattern prm1, int prm2){return default(global::java.lang.String);}
        public virtual bool hasNext(global::java.lang.String prm1){return default(bool);}
        public virtual bool hasNext(global::java.util.regex.Pattern prm1){return default(bool);}
        public virtual bool hasNext(){return default(bool);}
        public virtual bool hasNextBigDecimal(){return default(bool);}
        public virtual bool hasNextBigInteger(int prm1){return default(bool);}
        public virtual bool hasNextBigInteger(){return default(bool);}
        public virtual bool hasNextBoolean(){return default(bool);}
        public virtual bool hasNextByte(int prm1){return default(bool);}
        public virtual bool hasNextByte(){return default(bool);}
        public virtual bool hasNextDouble(){return default(bool);}
        public virtual bool hasNextFloat(){return default(bool);}
        public virtual bool hasNextInt(){return default(bool);}
        public virtual bool hasNextInt(int prm1){return default(bool);}
        public virtual bool hasNextLine(){return default(bool);}
        public virtual bool hasNextLong(int prm1){return default(bool);}
        public virtual bool hasNextLong(){return default(bool);}
        public virtual bool hasNextShort(int prm1){return default(bool);}
        public virtual bool hasNextShort(){return default(bool);}
        public virtual global::java.io.IOException ioException(){return default(global::java.io.IOException);}
        public Scanner(global::java.io.InputStream prm1){}
        public Scanner(global::java.lang.Readable prm1){}
        public Scanner(global::java.io.InputStream prm1, global::java.lang.String prm2){}
        public Scanner(global::java.io.File prm1, global::java.lang.String prm2){}
        public Scanner(global::java.io.File prm1){}
        public Scanner(global::java.nio.channels.ReadableByteChannel prm1, global::java.lang.String prm2){}
        public Scanner(global::java.nio.channels.ReadableByteChannel prm1){}
        public Scanner(global::java.lang.String prm1){}
        public Scanner(global::java.nio.file.Path prm1){}
        public Scanner(global::java.nio.file.Path prm1, global::java.lang.String prm2){}
        public virtual Locale locale(){return default(Locale);}
        public virtual global::java.util.regex.MatchResult match(){return default(global::java.util.regex.MatchResult);}
        public virtual global::java.lang.String next(global::java.util.regex.Pattern prm1){return default(global::java.lang.String);}
        public virtual global::java.lang.String next(global::java.lang.String prm1){return default(global::java.lang.String);}
        public virtual global::java.lang.String next(){return default(global::java.lang.String);}
        public virtual global::java.math.BigDecimal nextBigDecimal(){return default(global::java.math.BigDecimal);}
        public virtual global::java.math.BigInteger nextBigInteger(int prm1){return default(global::java.math.BigInteger);}
        public virtual global::java.math.BigInteger nextBigInteger(){return default(global::java.math.BigInteger);}
        public virtual bool nextBoolean(){return default(bool);}
        public virtual byte nextByte(int prm1){return default(byte);}
        public virtual byte nextByte(){return default(byte);}
        public virtual double nextDouble(){return default(double);}
        public virtual float nextFloat(){return default(float);}
        public virtual int nextInt(int prm1){return default(int);}
        public virtual int nextInt(){return default(int);}
        public virtual global::java.lang.String nextLine(){return default(global::java.lang.String);}
        public virtual long nextLong(int prm1){return default(long);}
        public virtual long nextLong(){return default(long);}
        public virtual short nextShort(int prm1){return default(short);}
        public virtual short nextShort(){return default(short);}
        public virtual int radix(){return default(int);}
        public virtual void remove(){}
        public virtual Scanner reset(){return default(Scanner);}
        public virtual Scanner skip(global::java.util.regex.Pattern prm1){return default(Scanner);}
        public virtual Scanner skip(global::java.lang.String prm1){return default(Scanner);}
        public override global::java.lang.String toString(){return default(global::java.lang.String);}
        public virtual Scanner useDelimiter(global::java.lang.String prm1){return default(Scanner);}
        public virtual Scanner useDelimiter(global::java.util.regex.Pattern prm1){return default(Scanner);}
        public virtual Scanner useLocale(Locale prm1){return default(Scanner);}
        public virtual Scanner useRadix(int prm1){return default(Scanner);}
    }
}
