//***************************************************
//* This file was generated by JSharp
//***************************************************
namespace java.util.jar
{
    public partial class Attributes : global::java.lang.Object, Map<global::System.Object,global::System.Object>, global::java.lang.Cloneable
    {
        public partial class Name : global::java.lang.Object
        {
            public static global::java.util.jar.Attributes.Name CLASS_PATH;
            public static global::java.util.jar.Attributes.Name CONTENT_TYPE;
            public static global::java.util.jar.Attributes.Name EXTENSION_INSTALLATION;
            public static global::java.util.jar.Attributes.Name EXTENSION_LIST;
            public static global::java.util.jar.Attributes.Name EXTENSION_NAME;
            public static global::java.util.jar.Attributes.Name IMPLEMENTATION_TITLE;
            public static global::java.util.jar.Attributes.Name IMPLEMENTATION_URL;
            public static global::java.util.jar.Attributes.Name IMPLEMENTATION_VENDOR;
            public static global::java.util.jar.Attributes.Name IMPLEMENTATION_VENDOR_ID;
            public static global::java.util.jar.Attributes.Name IMPLEMENTATION_VERSION;
            public static global::java.util.jar.Attributes.Name MAIN_CLASS;
            public static global::java.util.jar.Attributes.Name MANIFEST_VERSION;
            public static global::java.util.jar.Attributes.Name SEALED;
            public static global::java.util.jar.Attributes.Name SIGNATURE_VERSION;
            public static global::java.util.jar.Attributes.Name SPECIFICATION_TITLE;
            public static global::java.util.jar.Attributes.Name SPECIFICATION_VENDOR;
            public static global::java.util.jar.Attributes.Name SPECIFICATION_VERSION;
            public override bool equals(global::System.Object prm1){return default(bool);}
            public override int hashCode(){return default(int);}
            public Name(global::java.lang.String prm1){}
            public override global::java.lang.String toString(){return default(global::java.lang.String);}
        }
        public Map<global::System.Object,global::System.Object> map;
        public virtual void clear(){}
        public virtual new global::System.Object clone(){return default(global::System.Object);}
        public virtual bool containsKey(global::System.Object prm1){return default(bool);}
        public virtual bool containsValue(global::System.Object prm1){return default(bool);}
        public virtual Set<Map_Entry<global::System.Object,global::System.Object>> entrySet(){return default(Set<Map_Entry<global::System.Object,global::System.Object>>);}
        public override bool equals(global::System.Object prm1){return default(bool);}
        public virtual global::System.Object get(global::System.Object prm1){return default(global::System.Object);}
        public virtual global::java.lang.String getValue(Attributes.Name prm1){return default(global::java.lang.String);}
        public virtual global::java.lang.String getValue(global::java.lang.String prm1){return default(global::java.lang.String);}
        public override int hashCode(){return default(int);}
        public Attributes(Attributes prm1){}
        public Attributes(int prm1){}
        public Attributes(){}
        public virtual Set<global::System.Object> keySet(){return default(Set<global::System.Object>);}
        public virtual global::System.Object put(global::System.Object prm1, global::System.Object prm2){return default(global::System.Object);}
        public virtual void putAll(Map<global::System.Object,global::System.Object> prm1){}
        public virtual global::java.lang.String putValue(global::java.lang.String prm1, global::java.lang.String prm2){return default(global::java.lang.String);}
        public virtual global::System.Object remove(global::System.Object prm1){return default(global::System.Object);}
        public virtual int size(){return default(int);}
        public virtual Collection<global::System.Object> values(){return default(Collection<global::System.Object>);}
        public bool  IsEmpty { get; private set;}
    }
}
