//***************************************************
//* This file was generated by JSharp
//***************************************************
namespace java.util.concurrent
{
    public partial class Phaser : global::java.lang.Object
    {
        public virtual int arrive(){return default(int);}
        public virtual int arriveAndAwaitAdvance(){return default(int);}
        public virtual int arriveAndDeregister(){return default(int);}
        public virtual int awaitAdvance(int prm1){return default(int);}
        public virtual int awaitAdvanceInterruptibly(int prm1){return default(int);}
        public virtual int awaitAdvanceInterruptibly(int prm1, long prm2, TimeUnit prm3){return default(int);}
        public virtual int bulkRegister(int prm1){return default(int);}
        public virtual void forceTermination(){}
        public Phaser(Phaser prm1){}
        public Phaser(Phaser prm1, int prm2){}
        public Phaser(){}
        public Phaser(int prm1){}
        protected virtual bool onAdvance(int prm1, int prm2){return default(bool);}
        public virtual int register(){return default(int);}
        public override global::java.lang.String toString(){return default(global::java.lang.String);}
        public int  ArrivedParties { get; private set;}
        public bool  IsTerminated { get; private set;}
        public Phaser  Parent { get; private set;}
        public int  Phase { get; private set;}
        public int  RegisteredParties { get; private set;}
        public Phaser  Root { get; private set;}
        public int  UnarrivedParties { get; private set;}
    }
}
