//***************************************************
//* This file was generated by JSharp
//***************************************************
namespace java.util.concurrent
{
    public partial class LinkedBlockingDeque<E> : AbstractQueue<E>, BlockingDeque<E>, global::java.io.Serializable
    {
        public override bool add(E prm1){return default(bool);}
        public virtual void addFirst(E prm1){}
        public virtual void addLast(E prm1){}
        public override void clear(){}
        public override bool contains(global::System.Object prm1){return default(bool);}
        public virtual Iterator<E> descendingIterator(){return default(Iterator<E>);}
        public virtual int drainTo(Collection<global::System.Object> prm1, int prm2){return default(int);}
        public virtual int drainTo(Collection<global::System.Object> prm1){return default(int);}
        public override E element(){return default(E);}
        public override Iterator<E> iterator(){return default(Iterator<E>);}
        public LinkedBlockingDeque(Collection<E> prm1){}
        public LinkedBlockingDeque(int prm1){}
        public LinkedBlockingDeque(){}
        public virtual bool offer(E prm1, long prm2, TimeUnit prm3){return default(bool);}
        public virtual bool offer(E prm1){return default(bool);}
        public virtual bool offerFirst(E prm1){return default(bool);}
        public virtual bool offerFirst(E prm1, long prm2, TimeUnit prm3){return default(bool);}
        public virtual bool offerLast(E prm1){return default(bool);}
        public virtual bool offerLast(E prm1, long prm2, TimeUnit prm3){return default(bool);}
        public virtual E peek(){return default(E);}
        public virtual E peekFirst(){return default(E);}
        public virtual E peekLast(){return default(E);}
        public virtual E poll(){return default(E);}
        public virtual E poll(long prm1, TimeUnit prm2){return default(E);}
        public virtual E pollFirst(){return default(E);}
        public virtual E pollFirst(long prm1, TimeUnit prm2){return default(E);}
        public virtual E pollLast(){return default(E);}
        public virtual E pollLast(long prm1, TimeUnit prm2){return default(E);}
        public virtual E pop(){return default(E);}
        public virtual void push(E prm1){}
        public virtual void put(E prm1){}
        public virtual void putFirst(E prm1){}
        public virtual void putLast(E prm1){}
        public virtual int remainingCapacity(){return default(int);}
        public override E remove(){return default(E);}
        public override bool remove(global::System.Object prm1){return default(bool);}
        public virtual E removeFirst(){return default(E);}
        public virtual bool removeFirstOccurrence(global::System.Object prm1){return default(bool);}
        public virtual E removeLast(){return default(E);}
        public virtual bool removeLastOccurrence(global::System.Object prm1){return default(bool);}
        public override int size(){return default(int);}
        public virtual E take(){return default(E);}
        public virtual E takeFirst(){return default(E);}
        public virtual E takeLast(){return default(E);}
        public override global::System.Object[] toArray(){return default(global::System.Object[]);}
        public override T[] toArray<T>(T[] prm1){return default(T[]);}
        public override global::java.lang.String toString(){return default(global::java.lang.String);}
        public E  First { get; private set;}
        public E  Last { get; private set;}
    }
}
