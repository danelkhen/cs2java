//***************************************************
//* This file was generated by JSharp
//***************************************************
namespace java.util.concurrent
{
    public partial interface BlockingDeque<E> : BlockingQueue<E>, Deque<E>
    {
        void addFirst(E prm1);
        void addLast(E prm1);
        E element();
        Iterator<E> iterator();
        bool offerFirst(E prm1, long prm2, TimeUnit prm3);
        bool offerFirst(E prm1);
        bool offerLast(E prm1);
        bool offerLast(E prm1, long prm2, TimeUnit prm3);
        E peek();
        E poll();
        E pollFirst(long prm1, TimeUnit prm2);
        E pollLast(long prm1, TimeUnit prm2);
        void push(E prm1);
        void putFirst(E prm1);
        void putLast(E prm1);
        E remove();
        bool removeFirstOccurrence(global::System.Object prm1);
        bool removeLastOccurrence(global::System.Object prm1);
        int size();
        E takeFirst();
        E takeLast();
    }
}
