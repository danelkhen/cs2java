//***************************************************
//* This file was generated by JSharp
//***************************************************
namespace java.util
{
    public partial class Collections : global::java.lang.Object
    {
        public static List<global::java.lang.Q> EMPTY_LIST;
        public static Map<global::java.lang.Q,global::java.lang.Q> EMPTY_MAP;
        public static Set<global::java.lang.Q> EMPTY_SET;
        public Collections(){}
        public static bool addAll<T>(Collection<global::System.Object> prm1, T[] prm2){return default(bool);}
        public static Queue<T> asLifoQueue<T>(Deque<T> prm1){return default(Queue<T>);}
        public static int binarySearch<T>(List<global::java.lang.Comparable<global::System.Object>> prm1, T prm2){return default(int);}
        public static int binarySearch<T>(List<T> prm1, T prm2, Comparator<global::System.Object> prm3){return default(int);}
        public static Collection<E> checkedCollection<E>(Collection<E> prm1, global::java.lang.Class<E> prm2){return default(Collection<E>);}
        public static List<E> checkedList<E>(List<E> prm1, global::java.lang.Class<E> prm2){return default(List<E>);}
        public static Map<K,V> checkedMap<K, V>(Map<K,V> prm1, global::java.lang.Class<K> prm2, global::java.lang.Class<V> prm3){return default(Map<K,V>);}
        public static Set<E> checkedSet<E>(Set<E> prm1, global::java.lang.Class<E> prm2){return default(Set<E>);}
        public static SortedMap<K,V> checkedSortedMap<K, V>(SortedMap<K,V> prm1, global::java.lang.Class<K> prm2, global::java.lang.Class<V> prm3){return default(SortedMap<K,V>);}
        public static SortedSet<E> checkedSortedSet<E>(SortedSet<E> prm1, global::java.lang.Class<E> prm2){return default(SortedSet<E>);}
        public static void copy<T>(List<global::System.Object> prm1, List<T> prm2){}
        public static bool disjoint(Collection<global::System.Object> prm1, Collection<global::System.Object> prm2){return default(bool);}
        public static Enumeration<T> emptyEnumeration<T>(){return default(Enumeration<T>);}
        public static Iterator<T> emptyIterator<T>(){return default(Iterator<T>);}
        public static List<T> emptyList<T>(){return default(List<T>);}
        public static ListIterator<T> emptyListIterator<T>(){return default(ListIterator<T>);}
        public static Map<K,V> emptyMap<K, V>(){return default(Map<K,V>);}
        public static Set<T> emptySet<T>(){return default(Set<T>);}
        public static Enumeration<T> enumeration<T>(Collection<T> prm1){return default(Enumeration<T>);}
        public static void fill<T>(List<global::System.Object> prm1, T prm2){}
        public static int frequency(Collection<global::System.Object> prm1, global::System.Object prm2){return default(int);}
        public static int indexOfSubList(List<global::System.Object> prm1, List<global::System.Object> prm2){return default(int);}
        public static int lastIndexOfSubList(List<global::System.Object> prm1, List<global::System.Object> prm2){return default(int);}
        public static ArrayList<T> list<T>(Enumeration<T> prm1){return default(ArrayList<T>);}
        public static T max<T>(Collection<T> prm1){return default(T);}
        public static T max<T>(Collection<T> prm1, Comparator<global::System.Object> prm2){return default(T);}
        public static T min<T>(Collection<T> prm1, Comparator<global::System.Object> prm2){return default(T);}
        public static T min<T>(Collection<T> prm1){return default(T);}
        public static List<T> nCopies<T>(int prm1, T prm2){return default(List<T>);}
        public static Set<E> newSetFromMap<E>(Map<E,global::java.lang.Boolean> prm1){return default(Set<E>);}
        public static bool replaceAll<T>(List<T> prm1, T prm2, T prm3){return default(bool);}
        public static void reverse(List<global::System.Object> prm1){}
        public static Comparator<T> reverseOrder<T>(){return default(Comparator<T>);}
        public static Comparator<T> reverseOrder<T>(Comparator<T> prm1){return default(Comparator<T>);}
        public static void rotate(List<global::System.Object> prm1, int prm2){}
        public static void shuffle(List<global::System.Object> prm1, Random prm2){}
        public static void shuffle(List<global::System.Object> prm1){}
        public static Set<T> singleton<T>(T prm1){return default(Set<T>);}
        public static List<T> singletonList<T>(T prm1){return default(List<T>);}
        public static Map<K,V> singletonMap<K, V>(K prm1, V prm2){return default(Map<K,V>);}
        public static void sort<T>(List<T> prm1){}
        public static void sort<T>(List<T> prm1, Comparator<global::System.Object> prm2){}
        public static void swap(List<global::System.Object> prm1, int prm2, int prm3){}
        public static Collection<T> synchronizedCollection<T>(Collection<T> prm1){return default(Collection<T>);}
        public static List<T> synchronizedList<T>(List<T> prm1){return default(List<T>);}
        public static Map<K,V> synchronizedMap<K, V>(Map<K,V> prm1){return default(Map<K,V>);}
        public static Set<T> synchronizedSet<T>(Set<T> prm1){return default(Set<T>);}
        public static SortedMap<K,V> synchronizedSortedMap<K, V>(SortedMap<K,V> prm1){return default(SortedMap<K,V>);}
        public static SortedSet<T> synchronizedSortedSet<T>(SortedSet<T> prm1){return default(SortedSet<T>);}
        public static Collection<T> unmodifiableCollection<T>(Collection<T> prm1){return default(Collection<T>);}
        public static List<T> unmodifiableList<T>(List<T> prm1){return default(List<T>);}
        public static Map<K,V> unmodifiableMap<K, V>(Map<K,V> prm1){return default(Map<K,V>);}
        public static Set<T> unmodifiableSet<T>(Set<T> prm1){return default(Set<T>);}
        public static SortedMap<K,V> unmodifiableSortedMap<K, V>(SortedMap<K,V> prm1){return default(SortedMap<K,V>);}
        public static SortedSet<T> unmodifiableSortedSet<T>(SortedSet<T> prm1){return default(SortedSet<T>);}
    }
}
