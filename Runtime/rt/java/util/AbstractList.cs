//***************************************************
//* This file was generated by JSharp
//***************************************************
namespace java.util
{
    public abstract partial class AbstractList<E> : AbstractCollection<E>, List<E>
    {
        public int modCount;
        public virtual void add(int prm1, E prm2){}
        public override bool add(E prm1){return default(bool);}
        public virtual bool addAll(int prm1, Collection<E> prm2){return default(bool);}
        public override void clear(){}
        public override bool equals(global::System.Object prm1){return default(bool);}
        public virtual E get(int prm1){return default(E);}
        public override int hashCode(){return default(int);}
        public virtual int indexOf(global::System.Object prm1){return default(int);}
        public override Iterator<E> iterator(){return default(Iterator<E>);}
        public AbstractList(){}
        public virtual int lastIndexOf(global::System.Object prm1){return default(int);}
        public virtual ListIterator<E> listIterator(){return default(ListIterator<E>);}
        public virtual ListIterator<E> listIterator(int prm1){return default(ListIterator<E>);}
        public virtual E remove(int prm1){return default(E);}
        protected virtual void removeRange(int prm1, int prm2){}
        public virtual E set(int prm1, E prm2){return default(E);}
        public virtual List<E> subList(int prm1, int prm2){return default(List<E>);}
    }
}
