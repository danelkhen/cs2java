//***************************************************
//* This file was generated by JSharp
//***************************************************
namespace java.util
{
    public abstract partial class AbstractMap<K,V> : global::java.lang.Object, Map<K,V>
    {
        public partial class SimpleEntry<K,V> : global::java.lang.Object, Map_Entry<K,V>, global::java.io.Serializable
        {
            public override bool equals(global::System.Object prm1){return default(bool);}
            public override int hashCode(){return default(int);}
            public SimpleEntry(K prm1, V prm2){}
            public SimpleEntry(Map_Entry<K,V> prm1){}
            public virtual V setValue(V prm1){return default(V);}
            public override global::java.lang.String toString(){return default(global::java.lang.String);}
            public K  Key { get; private set;}
            public V  Value { get; set;}
        }
        public partial class SimpleImmutableEntry<K,V> : global::java.lang.Object, Map_Entry<K,V>, global::java.io.Serializable
        {
            public override bool equals(global::System.Object prm1){return default(bool);}
            public override int hashCode(){return default(int);}
            public SimpleImmutableEntry(K prm1, V prm2){}
            public SimpleImmutableEntry(Map_Entry<K,V> prm1){}
            public virtual V setValue(V prm1){return default(V);}
            public override global::java.lang.String toString(){return default(global::java.lang.String);}
            public K  Key { get; private set;}
            public V  Value { get; set;}
        }
        public virtual void clear(){}
        protected override global::System.Object clone(){return default(global::System.Object);}
        public virtual bool containsKey(global::System.Object prm1){return default(bool);}
        public virtual bool containsValue(global::System.Object prm1){return default(bool);}
        public virtual Set<Map_Entry<K,V>> entrySet(){return default(Set<Map_Entry<K,V>>);}
        public override bool equals(global::System.Object prm1){return default(bool);}
        public virtual V get(global::System.Object prm1){return default(V);}
        public override int hashCode(){return default(int);}
        public AbstractMap(){}
        public virtual Set<K> keySet(){return default(Set<K>);}
        public virtual V put(K prm1, V prm2){return default(V);}
        public virtual void putAll(Map<K,V> prm1){}
        public virtual V remove(global::System.Object prm1){return default(V);}
        public virtual int size(){return default(int);}
        public override global::java.lang.String toString(){return default(global::java.lang.String);}
        public virtual Collection<V> values(){return default(Collection<V>);}
        public bool  IsEmpty { get; private set;}
    }
}
