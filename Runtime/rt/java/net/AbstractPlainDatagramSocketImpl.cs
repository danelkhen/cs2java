//***************************************************
//* This file was generated by JSharp
//***************************************************
namespace java.net
{
    internal abstract partial class AbstractPlainDatagramSocketImpl : DatagramSocketImpl
    {
        public AbstractPlainDatagramSocketImpl(){}
        protected override void bind(int prm1, InetAddress prm2){}
        protected virtual void bind0(int prm1, InetAddress prm2){}
        protected override void close(){}
        protected override void connect(InetAddress prm1, int prm2){}
        protected virtual void connect0(InetAddress prm1, int prm2){}
        protected override void create(){}
        protected virtual void datagramSocketClose(){}
        protected virtual void datagramSocketCreate(){}
        protected override void disconnect(){}
        protected virtual void disconnect0(int prm1){}
        protected override void finalize(){}
        public override global::System.Object getOption(int prm1){return default(global::System.Object);}
        protected override void join(InetAddress prm1){}
        protected virtual void join(InetAddress prm1, NetworkInterface prm2){}
        protected override void joinGroup(SocketAddress prm1, NetworkInterface prm2){}
        protected virtual void leave(InetAddress prm1, NetworkInterface prm2){}
        protected override void leave(InetAddress prm1){}
        protected override void leaveGroup(SocketAddress prm1, NetworkInterface prm2){}
        protected virtual bool nativeConnectDisabled(){return default(bool);}
        protected override int peek(InetAddress prm1){return default(int);}
        protected override int peekData(DatagramPacket prm1){return default(int);}
        protected override void receive(DatagramPacket prm1){}
        protected virtual void receive0(DatagramPacket prm1){}
        protected override void send(DatagramPacket prm1){}
        public override void setOption(int prm1, global::System.Object prm2){}
        protected override void setTimeToLive(int prm1){}
        protected override void setTTL(byte prm1){}
        protected virtual global::System.Object socketGetOption(int prm1){return default(global::System.Object);}
        protected virtual void socketSetOption(int prm1, global::System.Object prm2){}
        public bool  IsClosed { get; private set;}
        public int  TimeToLive { get; set;}
        public byte  TTL { get; set;}
    }
}
