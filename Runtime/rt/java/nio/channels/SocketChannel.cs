//***************************************************
//* This file was generated by JSharp
//***************************************************
namespace java.nio.channels
{
    public abstract partial class SocketChannel : global::java.nio.channels.spi.AbstractSelectableChannel, ByteChannel, ScatteringByteChannel, GatheringByteChannel, NetworkChannel
    {
        public virtual SocketChannel bind(global::java.net.SocketAddress prm1){return default(SocketChannel);}
        NetworkChannel NetworkChannel.bind(global::java.net.SocketAddress prm1){return default(NetworkChannel);}
        public virtual bool connect(global::java.net.SocketAddress prm1){return default(bool);}
        public virtual bool finishConnect(){return default(bool);}
        public virtual T getOption<T>(global::java.net.SocketOption<T> prm1){return default(T);}
        public SocketChannel(global::java.nio.channels.spi.SelectorProvider prm1) : base(default(global::java.nio.channels.spi.SelectorProvider)){}
        public static SocketChannel open(){return default(SocketChannel);}
        public static SocketChannel open(global::java.net.SocketAddress prm1){return default(SocketChannel);}
        public long read(ByteBuffer[] prm1){return default(long);}
        public virtual int read(ByteBuffer prm1){return default(int);}
        public virtual long read(ByteBuffer[] prm1, int prm2, int prm3){return default(long);}
        public virtual SocketChannel setOption<T>(global::java.net.SocketOption<T> prm1, T prm2){return default(SocketChannel);}
        NetworkChannel NetworkChannel.setOption<T>(global::java.net.SocketOption<T> prm1, T prm2){return default(NetworkChannel);}
        public virtual SocketChannel shutdownInput(){return default(SocketChannel);}
        public virtual SocketChannel shutdownOutput(){return default(SocketChannel);}
        public virtual global::java.net.Socket socket(){return default(global::java.net.Socket);}
        public virtual global::java.util.Set<global::java.net.SocketOption<global::System.Object>> supportedOptions(){return default(global::java.util.Set<global::java.net.SocketOption<global::System.Object>>);}
        public int validOps(){return default(int);}
        public virtual int write(ByteBuffer prm1){return default(int);}
        public long write(ByteBuffer[] prm1){return default(long);}
        public virtual long write(ByteBuffer[] prm1, int prm2, int prm3){return default(long);}
        public bool  IsConnected { get; private set;}
        public bool  IsConnectionPending { get; private set;}
        public global::java.net.SocketAddress  LocalAddress { get; private set;}
        public global::java.net.SocketAddress  RemoteAddress { get; private set;}
    }
}
