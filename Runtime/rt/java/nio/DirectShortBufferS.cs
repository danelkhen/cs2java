//***************************************************
//* This file was generated by JSharp
//***************************************************
namespace java.nio
{
    internal partial class DirectShortBufferS : ShortBuffer, global::sun.nio.ch.DirectBuffer
    {
        public static bool unaligned;
        public static global::sun.misc.Unsafe @unsafe;
        public DirectShortBufferS(){}
        public virtual long address(){return default(long);}
        public override ShortBuffer asReadOnlyBuffer(){return default(ShortBuffer);}
        public virtual global::System.Object attachment(){return default(global::System.Object);}
        public virtual global::sun.misc.Cleaner cleaner(){return default(global::sun.misc.Cleaner);}
        public override ShortBuffer compact(){return default(ShortBuffer);}
        public override ShortBuffer duplicate(){return default(ShortBuffer);}
        public override ShortBuffer get(short[] prm1, int prm2, int prm3){return default(ShortBuffer);}
        public override short get(int prm1){return default(short);}
        public override short get(){return default(short);}
        public override ByteOrder order(){return default(ByteOrder);}
        public override ShortBuffer put(short[] prm1, int prm2, int prm3){return default(ShortBuffer);}
        public override ShortBuffer put(ShortBuffer prm1){return default(ShortBuffer);}
        public override ShortBuffer put(short prm1){return default(ShortBuffer);}
        public override ShortBuffer put(int prm1, short prm2){return default(ShortBuffer);}
        public override ShortBuffer slice(){return default(ShortBuffer);}
        public bool  IsDirect { get; private set;}
        public bool  IsReadOnly { get; private set;}
    }
}
