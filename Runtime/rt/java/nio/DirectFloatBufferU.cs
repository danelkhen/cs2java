//***************************************************
//* This file was generated by JSharp
//***************************************************
namespace java.nio
{
    internal partial class DirectFloatBufferU : FloatBuffer, global::sun.nio.ch.DirectBuffer
    {
        public static bool unaligned;
        public static global::sun.misc.Unsafe @unsafe;
        public DirectFloatBufferU(){}
        public virtual long address(){return default(long);}
        public override FloatBuffer asReadOnlyBuffer(){return default(FloatBuffer);}
        public virtual global::System.Object attachment(){return default(global::System.Object);}
        public virtual global::sun.misc.Cleaner cleaner(){return default(global::sun.misc.Cleaner);}
        public override FloatBuffer compact(){return default(FloatBuffer);}
        public override FloatBuffer duplicate(){return default(FloatBuffer);}
        public override FloatBuffer get(float[] prm1, int prm2, int prm3){return default(FloatBuffer);}
        public override float get(int prm1){return default(float);}
        public override float get(){return default(float);}
        public override ByteOrder order(){return default(ByteOrder);}
        public override FloatBuffer put(float[] prm1, int prm2, int prm3){return default(FloatBuffer);}
        public override FloatBuffer put(FloatBuffer prm1){return default(FloatBuffer);}
        public override FloatBuffer put(float prm1){return default(FloatBuffer);}
        public override FloatBuffer put(int prm1, float prm2){return default(FloatBuffer);}
        public override FloatBuffer slice(){return default(FloatBuffer);}
        public bool  IsDirect { get; private set;}
        public bool  IsReadOnly { get; private set;}
    }
}
