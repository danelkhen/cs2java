//***************************************************
//* This file was generated by JSharp
//***************************************************
namespace java.nio.charset
{
    public abstract partial class CharsetDecoder : global::java.lang.Object
    {
        public float averageCharsPerByte(){return default(float);}
        public Charset charset(){return default(Charset);}
        public CoderResult decode(ByteBuffer prm1, CharBuffer prm2, bool prm3){return default(CoderResult);}
        public CharBuffer decode(ByteBuffer prm1){return default(CharBuffer);}
        protected virtual CoderResult decodeLoop(ByteBuffer prm1, CharBuffer prm2){return default(CoderResult);}
        public virtual Charset detectedCharset(){return default(Charset);}
        public CoderResult flush(CharBuffer prm1){return default(CoderResult);}
        protected virtual CoderResult implFlush(CharBuffer prm1){return default(CoderResult);}
        protected virtual void implOnMalformedInput(CodingErrorAction prm1){}
        protected virtual void implOnUnmappableCharacter(CodingErrorAction prm1){}
        protected virtual void implReplaceWith(global::java.lang.String prm1){}
        protected virtual void implReset(){}
        public CharsetDecoder(Charset prm1, float prm2, float prm3){}
        public virtual CodingErrorAction malformedInputAction(){return default(CodingErrorAction);}
        public float maxCharsPerByte(){return default(float);}
        public CharsetDecoder onMalformedInput(CodingErrorAction prm1){return default(CharsetDecoder);}
        public CharsetDecoder onUnmappableCharacter(CodingErrorAction prm1){return default(CharsetDecoder);}
        public global::java.lang.String replacement(){return default(global::java.lang.String);}
        public CharsetDecoder replaceWith(global::java.lang.String prm1){return default(CharsetDecoder);}
        public CharsetDecoder reset(){return default(CharsetDecoder);}
        public virtual CodingErrorAction unmappableCharacterAction(){return default(CodingErrorAction);}
        public bool  IsAutoDetecting { get; private set;}
        public bool  IsCharsetDetected { get; private set;}
    }
}
