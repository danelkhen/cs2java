//***************************************************
//* This file was generated by JSharp
//***************************************************
namespace java.math
{
    public partial class BigDecimal : global::java.lang.Number, global::java.lang.Comparable<BigDecimal>
    {
        public static BigDecimal ONE;
        public static int ROUND_CEILING;
        public static int ROUND_DOWN;
        public static int ROUND_FLOOR;
        public static int ROUND_HALF_DOWN;
        public static int ROUND_HALF_EVEN;
        public static int ROUND_HALF_UP;
        public static int ROUND_UNNECESSARY;
        public static int ROUND_UP;
        public static BigDecimal TEN;
        public static BigDecimal ZERO;
        public virtual BigDecimal abs(MathContext prm1){return default(BigDecimal);}
        public virtual BigDecimal abs(){return default(BigDecimal);}
        public virtual BigDecimal add(BigDecimal prm1){return default(BigDecimal);}
        public virtual BigDecimal add(BigDecimal prm1, MathContext prm2){return default(BigDecimal);}
        public virtual byte byteValueExact(){return default(byte);}
        public virtual int compareTo(BigDecimal prm1){return default(int);}
        public virtual BigDecimal divide(BigDecimal prm1, RoundingMode prm2){return default(BigDecimal);}
        public virtual BigDecimal divide(BigDecimal prm1, int prm2){return default(BigDecimal);}
        public virtual BigDecimal divide(BigDecimal prm1, int prm2, RoundingMode prm3){return default(BigDecimal);}
        public virtual BigDecimal divide(BigDecimal prm1, int prm2, int prm3){return default(BigDecimal);}
        public virtual BigDecimal divide(BigDecimal prm1){return default(BigDecimal);}
        public virtual BigDecimal divide(BigDecimal prm1, MathContext prm2){return default(BigDecimal);}
        public virtual BigDecimal[] divideAndRemainder(BigDecimal prm1){return default(BigDecimal[]);}
        public virtual BigDecimal[] divideAndRemainder(BigDecimal prm1, MathContext prm2){return default(BigDecimal[]);}
        public virtual BigDecimal divideToIntegralValue(BigDecimal prm1, MathContext prm2){return default(BigDecimal);}
        public virtual BigDecimal divideToIntegralValue(BigDecimal prm1){return default(BigDecimal);}
        public override double doubleValue(){return default(double);}
        public override bool equals(global::System.Object prm1){return default(bool);}
        public override float floatValue(){return default(float);}
        public override int hashCode(){return default(int);}
        public override int intValue(){return default(int);}
        public virtual int intValueExact(){return default(int);}
        public BigDecimal(BigInteger prm1, int prm2, MathContext prm3){}
        public BigDecimal(BigInteger prm1, int prm2){}
        public BigDecimal(BigInteger prm1, MathContext prm2){}
        public BigDecimal(BigInteger prm1){}
        public BigDecimal(double prm1, MathContext prm2){}
        public BigDecimal(long prm1, MathContext prm2){}
        public BigDecimal(long prm1){}
        public BigDecimal(int prm1, MathContext prm2){}
        public BigDecimal(int prm1){}
        public BigDecimal(char[] prm1){}
        public BigDecimal(char[] prm1, int prm2, int prm3, MathContext prm4){}
        public BigDecimal(char[] prm1, int prm2, int prm3){}
        public BigDecimal(double prm1){}
        public BigDecimal(global::java.lang.String prm1, MathContext prm2){}
        public BigDecimal(global::java.lang.String prm1){}
        public BigDecimal(char[] prm1, MathContext prm2){}
        public override long longValue(){return default(long);}
        public virtual long longValueExact(){return default(long);}
        public virtual BigDecimal max(BigDecimal prm1){return default(BigDecimal);}
        public virtual BigDecimal min(BigDecimal prm1){return default(BigDecimal);}
        public virtual BigDecimal movePointLeft(int prm1){return default(BigDecimal);}
        public virtual BigDecimal movePointRight(int prm1){return default(BigDecimal);}
        public virtual BigDecimal multiply(BigDecimal prm1, MathContext prm2){return default(BigDecimal);}
        public virtual BigDecimal multiply(BigDecimal prm1){return default(BigDecimal);}
        public virtual BigDecimal negate(MathContext prm1){return default(BigDecimal);}
        public virtual BigDecimal negate(){return default(BigDecimal);}
        public virtual BigDecimal plus(MathContext prm1){return default(BigDecimal);}
        public virtual BigDecimal plus(){return default(BigDecimal);}
        public virtual BigDecimal pow(int prm1, MathContext prm2){return default(BigDecimal);}
        public virtual BigDecimal pow(int prm1){return default(BigDecimal);}
        public virtual int precision(){return default(int);}
        public virtual BigDecimal remainder(BigDecimal prm1){return default(BigDecimal);}
        public virtual BigDecimal remainder(BigDecimal prm1, MathContext prm2){return default(BigDecimal);}
        public virtual BigDecimal round(MathContext prm1){return default(BigDecimal);}
        public virtual int scale(){return default(int);}
        public virtual BigDecimal scaleByPowerOfTen(int prm1){return default(BigDecimal);}
        public virtual BigDecimal setScale(int prm1, RoundingMode prm2){return default(BigDecimal);}
        public virtual BigDecimal setScale(int prm1, int prm2){return default(BigDecimal);}
        public virtual BigDecimal setScale(int prm1){return default(BigDecimal);}
        public virtual short shortValueExact(){return default(short);}
        public virtual int signum(){return default(int);}
        public virtual BigDecimal stripTrailingZeros(){return default(BigDecimal);}
        public virtual BigDecimal subtract(BigDecimal prm1){return default(BigDecimal);}
        public virtual BigDecimal subtract(BigDecimal prm1, MathContext prm2){return default(BigDecimal);}
        public virtual BigInteger toBigInteger(){return default(BigInteger);}
        public virtual BigInteger toBigIntegerExact(){return default(BigInteger);}
        public virtual global::java.lang.String toEngineeringString(){return default(global::java.lang.String);}
        public virtual global::java.lang.String toPlainString(){return default(global::java.lang.String);}
        public override global::java.lang.String toString(){return default(global::java.lang.String);}
        public virtual BigDecimal ulp(){return default(BigDecimal);}
        public virtual BigInteger unscaledValue(){return default(BigInteger);}
        public static BigDecimal valueOf(long prm1){return default(BigDecimal);}
        public static BigDecimal valueOf(long prm1, int prm2){return default(BigDecimal);}
        public static BigDecimal valueOf(double prm1){return default(BigDecimal);}
    }
}
