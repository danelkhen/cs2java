//***************************************************
//* This file was generated by JSharp
//***************************************************
namespace java.math
{
    public partial class BigInteger : global::java.lang.Number, global::java.lang.Comparable<BigInteger>
    {
        public static BigInteger ONE;
        public static BigInteger TEN;
        public static BigInteger ZERO;
        public virtual BigInteger abs(){return default(BigInteger);}
        public virtual BigInteger add(BigInteger prm1){return default(BigInteger);}
        public virtual BigInteger and(BigInteger prm1){return default(BigInteger);}
        public virtual BigInteger andNot(BigInteger prm1){return default(BigInteger);}
        public virtual int bitCount(){return default(int);}
        public virtual int bitLength(){return default(int);}
        public virtual BigInteger clearBit(int prm1){return default(BigInteger);}
        public virtual int compareTo(BigInteger prm1){return default(int);}
        public virtual BigInteger divide(BigInteger prm1){return default(BigInteger);}
        public virtual BigInteger[] divideAndRemainder(BigInteger prm1){return default(BigInteger[]);}
        public override double doubleValue(){return default(double);}
        public override bool equals(global::System.Object prm1){return default(bool);}
        public virtual BigInteger flipBit(int prm1){return default(BigInteger);}
        public override float floatValue(){return default(float);}
        public virtual BigInteger gcd(BigInteger prm1){return default(BigInteger);}
        public override int hashCode(){return default(int);}
        public override int intValue(){return default(int);}
        public virtual bool isProbablePrime(int prm1){return default(bool);}
        public BigInteger(global::java.lang.String prm1){}
        public BigInteger(int prm1, global::java.util.Random prm2){}
        public BigInteger(int prm1, int prm2, global::java.util.Random prm3){}
        public BigInteger(byte[] prm1){}
        public BigInteger(int prm1, byte[] prm2){}
        public BigInteger(global::java.lang.String prm1, int prm2){}
        public override long longValue(){return default(long);}
        public virtual BigInteger max(BigInteger prm1){return default(BigInteger);}
        public virtual BigInteger min(BigInteger prm1){return default(BigInteger);}
        public virtual BigInteger mod(BigInteger prm1){return default(BigInteger);}
        public virtual BigInteger modInverse(BigInteger prm1){return default(BigInteger);}
        public virtual BigInteger modPow(BigInteger prm1, BigInteger prm2){return default(BigInteger);}
        public virtual BigInteger multiply(BigInteger prm1){return default(BigInteger);}
        public virtual BigInteger negate(){return default(BigInteger);}
        public virtual BigInteger nextProbablePrime(){return default(BigInteger);}
        public virtual BigInteger not(){return default(BigInteger);}
        public virtual BigInteger or(BigInteger prm1){return default(BigInteger);}
        public virtual BigInteger pow(int prm1){return default(BigInteger);}
        public static BigInteger probablePrime(int prm1, global::java.util.Random prm2){return default(BigInteger);}
        public virtual BigInteger remainder(BigInteger prm1){return default(BigInteger);}
        public virtual BigInteger setBit(int prm1){return default(BigInteger);}
        public virtual BigInteger shiftLeft(int prm1){return default(BigInteger);}
        public virtual BigInteger shiftRight(int prm1){return default(BigInteger);}
        public virtual int signum(){return default(int);}
        public virtual BigInteger subtract(BigInteger prm1){return default(BigInteger);}
        public virtual bool testBit(int prm1){return default(bool);}
        public virtual byte[] toByteArray(){return default(byte[]);}
        public override global::java.lang.String toString(){return default(global::java.lang.String);}
        public virtual global::java.lang.String toString(int prm1){return default(global::java.lang.String);}
        public static BigInteger valueOf(long prm1){return default(BigInteger);}
        public virtual BigInteger xor(BigInteger prm1){return default(BigInteger);}
        public int  LowestSetBit { get; private set;}
    }
}
