//***************************************************
//* This file was generated by JSharp
//***************************************************
namespace sun.misc
{
    public partial class Unsafe : global::java.lang.Object
    {
        public static int ADDRESS_SIZE;
        public static int ARRAY_BOOLEAN_BASE_OFFSET;
        public static int ARRAY_BOOLEAN_INDEX_SCALE;
        public static int ARRAY_BYTE_BASE_OFFSET;
        public static int ARRAY_BYTE_INDEX_SCALE;
        public static int ARRAY_CHAR_BASE_OFFSET;
        public static int ARRAY_CHAR_INDEX_SCALE;
        public static int ARRAY_DOUBLE_BASE_OFFSET;
        public static int ARRAY_DOUBLE_INDEX_SCALE;
        public static int ARRAY_FLOAT_BASE_OFFSET;
        public static int ARRAY_FLOAT_INDEX_SCALE;
        public static int ARRAY_INT_BASE_OFFSET;
        public static int ARRAY_INT_INDEX_SCALE;
        public static int ARRAY_LONG_BASE_OFFSET;
        public static int ARRAY_LONG_INDEX_SCALE;
        public static int ARRAY_OBJECT_BASE_OFFSET;
        public static int ARRAY_OBJECT_INDEX_SCALE;
        public static int ARRAY_SHORT_BASE_OFFSET;
        public static int ARRAY_SHORT_INDEX_SCALE;
        public static int INVALID_FIELD_OFFSET;
        public Unsafe(){}
        public virtual int addressSize(){return default(int);}
        public virtual global::System.Object allocateInstance(global::java.lang.Class<global::java.lang.Q> prm1){return default(global::System.Object);}
        public virtual long allocateMemory(long prm1){return default(long);}
        public virtual int arrayBaseOffset(global::java.lang.Class<global::java.lang.Q> prm1){return default(int);}
        public virtual int arrayIndexScale(global::java.lang.Class<global::java.lang.Q> prm1){return default(int);}
        public bool compareAndSwapInt(global::System.Object prm1, long prm2, int prm3, int prm4){return default(bool);}
        public bool compareAndSwapLong(global::System.Object prm1, long prm2, long prm3, long prm4){return default(bool);}
        public bool compareAndSwapObject(global::System.Object prm1, long prm2, global::System.Object prm3, global::System.Object prm4){return default(bool);}
        public virtual void copyMemory(global::System.Object prm1, long prm2, global::System.Object prm3, long prm4, long prm5){}
        public virtual void copyMemory(long prm1, long prm2, long prm3){}
        public virtual global::java.lang.Class<global::java.lang.Q> defineAnonymousClass(global::java.lang.Class<global::java.lang.Q> prm1, byte[] prm2, global::System.Object[] prm3){return default(global::java.lang.Class<global::java.lang.Q>);}
        public virtual global::java.lang.Class<global::java.lang.Q> defineClass(global::java.lang.String prm1, byte[] prm2, int prm3, int prm4){return default(global::java.lang.Class<global::java.lang.Q>);}
        public virtual global::java.lang.Class<global::java.lang.Q> defineClass(global::java.lang.String prm1, byte[] prm2, int prm3, int prm4, global::java.lang.ClassLoader prm5, global::java.security.ProtectionDomain prm6){return default(global::java.lang.Class<global::java.lang.Q>);}
        public virtual void ensureClassInitialized(global::java.lang.Class<global::java.lang.Q> prm1){}
        public virtual int fieldOffset(global::java.lang.reflect.Field prm1){return default(int);}
        public virtual void freeMemory(long prm1){}
        public virtual long getAddress(long prm1){return default(long);}
        public virtual bool getBoolean(global::System.Object prm1, long prm2){return default(bool);}
        public virtual bool getBoolean(global::System.Object prm1, int prm2){return default(bool);}
        public virtual bool getBooleanVolatile(global::System.Object prm1, long prm2){return default(bool);}
        public virtual byte getByte(long prm1){return default(byte);}
        public virtual byte getByte(global::System.Object prm1, int prm2){return default(byte);}
        public virtual byte getByte(global::System.Object prm1, long prm2){return default(byte);}
        public virtual byte getByteVolatile(global::System.Object prm1, long prm2){return default(byte);}
        public virtual char getChar(global::System.Object prm1, int prm2){return default(char);}
        public virtual char getChar(global::System.Object prm1, long prm2){return default(char);}
        public virtual char getChar(long prm1){return default(char);}
        public virtual char getCharVolatile(global::System.Object prm1, long prm2){return default(char);}
        public virtual double getDouble(global::System.Object prm1, long prm2){return default(double);}
        public virtual double getDouble(long prm1){return default(double);}
        public virtual double getDouble(global::System.Object prm1, int prm2){return default(double);}
        public virtual double getDoubleVolatile(global::System.Object prm1, long prm2){return default(double);}
        public virtual float getFloat(global::System.Object prm1, long prm2){return default(float);}
        public virtual float getFloat(global::System.Object prm1, int prm2){return default(float);}
        public virtual float getFloat(long prm1){return default(float);}
        public virtual float getFloatVolatile(global::System.Object prm1, long prm2){return default(float);}
        public virtual int getInt(long prm1){return default(int);}
        public virtual int getInt(global::System.Object prm1, int prm2){return default(int);}
        public virtual int getInt(global::System.Object prm1, long prm2){return default(int);}
        public virtual int getIntVolatile(global::System.Object prm1, long prm2){return default(int);}
        public virtual int getLoadAverage(double[] prm1, int prm2){return default(int);}
        public virtual long getLong(long prm1){return default(long);}
        public virtual long getLong(global::System.Object prm1, long prm2){return default(long);}
        public virtual long getLong(global::System.Object prm1, int prm2){return default(long);}
        public virtual long getLongVolatile(global::System.Object prm1, long prm2){return default(long);}
        public virtual global::System.Object getObject(global::System.Object prm1, long prm2){return default(global::System.Object);}
        public virtual global::System.Object getObject(global::System.Object prm1, int prm2){return default(global::System.Object);}
        public virtual global::System.Object getObjectVolatile(global::System.Object prm1, long prm2){return default(global::System.Object);}
        public virtual short getShort(long prm1){return default(short);}
        public virtual short getShort(global::System.Object prm1, long prm2){return default(short);}
        public virtual short getShort(global::System.Object prm1, int prm2){return default(short);}
        public virtual short getShortVolatile(global::System.Object prm1, long prm2){return default(short);}
        public virtual void monitorEnter(global::System.Object prm1){}
        public virtual void monitorExit(global::System.Object prm1){}
        public virtual long objectFieldOffset(global::java.lang.reflect.Field prm1){return default(long);}
        public virtual int pageSize(){return default(int);}
        public virtual void park(bool prm1, long prm2){}
        public virtual void putAddress(long prm1, long prm2){}
        public virtual void putBoolean(global::System.Object prm1, long prm2, bool prm3){}
        public virtual void putBoolean(global::System.Object prm1, int prm2, bool prm3){}
        public virtual void putBooleanVolatile(global::System.Object prm1, long prm2, bool prm3){}
        public virtual void putByte(long prm1, byte prm2){}
        public virtual void putByte(global::System.Object prm1, int prm2, byte prm3){}
        public virtual void putByte(global::System.Object prm1, long prm2, byte prm3){}
        public virtual void putByteVolatile(global::System.Object prm1, long prm2, byte prm3){}
        public virtual void putChar(global::System.Object prm1, long prm2, char prm3){}
        public virtual void putChar(long prm1, char prm2){}
        public virtual void putChar(global::System.Object prm1, int prm2, char prm3){}
        public virtual void putCharVolatile(global::System.Object prm1, long prm2, char prm3){}
        public virtual void putDouble(global::System.Object prm1, long prm2, double prm3){}
        public virtual void putDouble(global::System.Object prm1, int prm2, double prm3){}
        public virtual void putDouble(long prm1, double prm2){}
        public virtual void putDoubleVolatile(global::System.Object prm1, long prm2, double prm3){}
        public virtual void putFloat(global::System.Object prm1, int prm2, float prm3){}
        public virtual void putFloat(global::System.Object prm1, long prm2, float prm3){}
        public virtual void putFloat(long prm1, float prm2){}
        public virtual void putFloatVolatile(global::System.Object prm1, long prm2, float prm3){}
        public virtual void putInt(global::System.Object prm1, int prm2, int prm3){}
        public virtual void putInt(global::System.Object prm1, long prm2, int prm3){}
        public virtual void putInt(long prm1, int prm2){}
        public virtual void putIntVolatile(global::System.Object prm1, long prm2, int prm3){}
        public virtual void putLong(global::System.Object prm1, long prm2, long prm3){}
        public virtual void putLong(long prm1, long prm2){}
        public virtual void putLong(global::System.Object prm1, int prm2, long prm3){}
        public virtual void putLongVolatile(global::System.Object prm1, long prm2, long prm3){}
        public virtual void putObject(global::System.Object prm1, long prm2, global::System.Object prm3){}
        public virtual void putObject(global::System.Object prm1, int prm2, global::System.Object prm3){}
        public virtual void putObjectVolatile(global::System.Object prm1, long prm2, global::System.Object prm3){}
        public virtual void putOrderedInt(global::System.Object prm1, long prm2, int prm3){}
        public virtual void putOrderedLong(global::System.Object prm1, long prm2, long prm3){}
        public virtual void putOrderedObject(global::System.Object prm1, long prm2, global::System.Object prm3){}
        public virtual void putShort(global::System.Object prm1, int prm2, short prm3){}
        public virtual void putShort(long prm1, short prm2){}
        public virtual void putShort(global::System.Object prm1, long prm2, short prm3){}
        public virtual void putShortVolatile(global::System.Object prm1, long prm2, short prm3){}
        public virtual long reallocateMemory(long prm1, long prm2){return default(long);}
        public virtual void setMemory(long prm1, long prm2, byte prm3){}
        public virtual void setMemory(global::System.Object prm1, long prm2, long prm3, byte prm4){}
        public virtual global::System.Object staticFieldBase(global::java.lang.reflect.Field prm1){return default(global::System.Object);}
        public virtual global::System.Object staticFieldBase(global::java.lang.Class<global::java.lang.Q> prm1){return default(global::System.Object);}
        public virtual long staticFieldOffset(global::java.lang.reflect.Field prm1){return default(long);}
        public virtual void throwException(global::java.lang.Throwable prm1){}
        public virtual bool tryMonitorEnter(global::System.Object prm1){return default(bool);}
        public virtual void unpark(global::System.Object prm1){}
    }
}
